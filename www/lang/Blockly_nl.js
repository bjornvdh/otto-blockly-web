'use strict';
goog.provide ( 'Blockly.Msg.nl');
goog.require ( 'Blockly.Msg');

Blockly.Msg.INOUT_HIGH_LEVEL = "1(hoog)";
Blockly.Msg.INOUT_LOW_LEVEL = "0(laag)";
Blockly.Msg.ARD_TYPE_CHAR = "karakter";
Blockly.Msg.ARD_TYPE_TEXT = "tekst";
Blockly.Msg.ARD_TYPE_BOOL = "ja/nee waarde";
Blockly.Msg.ARD_TYPE_SHORT = "byte";
Blockly.Msg.ARD_TYPE_NUMBER = "integer (heel getal)";
Blockly.Msg.ARD_TYPE_UNUMBER = "unsigned integer (heel getaal, alleen positief)";
Blockly.Msg.ARD_TYPE_LONG = "long integer (groot heel getal))";
Blockly.Msg.ARD_TYPE_DECIMAL = "kommagetal";
Blockly.Msg.ARD_TYPE_ARRAY = "array (lijst)";
Blockly.Msg.ARD_TYPE_NULL = "leeg";
Blockly.Msg.ARD_TYPE_UNDEF = "niet gedefini√´erd";
Blockly.Msg.ARD_TYPE_VOLATILE = "volatile integer";
Blockly.Msg.ARD_TYPE_CHILDBLOCKMISSING = "typing missing on a block";
Blockly.Msg.ARDUINO_BETWEEN = "willekeurig getal tussen";
Blockly.Msg.ARDUINO_BETWEEN_AND = "en";
Blockly.Msg.ARDUINO_VAR_DECLARE="statussen";
Blockly.Msg.ARDUINO_VAR_AS = "als";
Blockly.Msg.ARDUINO_VAR_VAL = "met waarde";
Blockly.Msg.base_def_const = "instellen";
Blockly.Msg.base_define_const = "wat hetzelfde is als";
Blockly.Msg.base_define_const_tooltip = "kun je gebruiken om een waarde een naam te geven";
Blockly.Msg.type = "waarde instellen voor het geselecteerde type";
Blockly.Msg.ADD_COMMENT = "üí¨commentaar";
Blockly.Msg.CHANGE_VALUE_TITLE = "Waarde wijzigen:";
Blockly.Msg.CLEAN_UP = "üõÅBlokken opruimen";
Blockly.Msg.COLLAPSE_ALL = "üóúBlokken invouwen";
Blockly.Msg.COLLAPSE_BLOCK = "üóúBlok invouwen";
Blockly.Msg.CONTROLS_SWITCH_VAR_TITLE = "Switch";
Blockly.Msg.CONTROLS_SWITCH_MSG_DEFAULT = "anders";
Blockly.Msg.CONTROLS_SWITCH_MSG_CASEBREAK = "is";
Blockly.Msg.CONTROLS_SWITCH_MSG_SWITCHVAR = "als de variabele geldig is";
Blockly.Msg.CONTROLS_SWITCH_MSG_DO = "doen";
Blockly.Msg.CONTROLS_SWITCH_TOOLTIP_1 = "Als een waarde 'waar' is, doe dan het volgende";
Blockly.Msg.CONTROLS_SWITCH_TOOLTIP_2 = "Als een waarde 'waar' is, voer dan het eerste blok met commando's uit, voer anders het tweede blok met commando's uit.";
Blockly.Msg.CONTROLS_SWITCH_TOOLTIP_3 = "Als een waarde 'waar' is, voer dan het eerste blok met commando's uit, voer anders het tweede blok met commando's uit, als de conditie 'waar' is.";
Blockly.Msg.CONTROLS_SWITCH_TOOLTIP_4 = "Als een waarde 'waar' is, voer dan het eerste blok met commando's uit, voer anders het tweede blok met commando's uit, als de conditie 'waar' is. Als geen enkele conditie waar is, voer dan het 'standaardwaarde' blok uit." ;
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "spring uit de lus";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "ga naar het begin van de lus";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Spring uit de lus";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Sla de rest van de lus over, en begin opnieuw met de volgende iteratie";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Waarschuwing: Dit blok moet in een lus gebruikt worden";
Blockly.Msg.CONTROLS_FOREACH_TITLE = "voor elk item %1 in lijst %2";
Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "Voor elk item in de lijst, zet de waarde van dat item in variabele %1, en voer dan alle commando's in het blok uit.";
Blockly.Msg.CONTROLS_FOR_TITLE = "voor %1 van %2 naar %3 (<=)in stappen van %4";
Blockly.Msg.CONTROLS_FOR_TITLE2 = "voor %1 van %2 naar %3 (>=)in stappen van - %4";
Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Zet de waarde van variabele %1 naar waardes van het startnummer tot het eindnummer, tel er steeds het aantal van de stapgrootte bij op, en voer dan steeds de commando's uit";
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "Conditie toevoegen";
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Laatste conditie toevoegen";
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Toevoegen, verwijderen of sorteren";
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "anders";
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "als niet";
Blockly.Msg.CONTROLS_IF_MSG_IF = "als";
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "Als de waarde 'waar' is, voer dan de commando's uit.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "Als de waarde 'waar' is, voer dan de commando's in het eerste blok uit, voer anders de commando's in het tweede blok uit.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "Als de waarde 'waar' is, voer dan de commando's in het eerste blok uit, anders, als de tweede waarde 'waar' is, voer dan de commando's in het tweede blok uit.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "Als de waarde 'waar' is, voer dan de commando's in het eerste blok uit, anders, als de tweede waarde 'waar' is, voer dan de commando's in het tweede blok uit. Als geen van de waardes 'waar' is, voer dan het laatste blok uit.";
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "doe";
Blockly.Msg.CONTROLS_REPEAT_TITLE = "üîÅ herhaal %1 keer";
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Voer de commando's meerdere keren uit.";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "herhaal tot";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "herhaal zolang als";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "Zolang de waarde 'niet waar' is, voer dan de commando's uit.";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "Zolang de waarde 'waar' is, voer dan de commando's uit.";
Blockly.Msg.DELETE_ALL_BLOCKS = "üóëÔ∏èVerwijder deze %1 blokken?";
Blockly.Msg.DELETE_BLOCK = "üóëÔ∏èVerwijder blok";
Blockly.Msg.DELETE_VARIABLE = "üóëÔ∏èVerwijder variabele %1";
Blockly.Msg.DELETE_VARIABLE_CONFIRMATION = "De variabele %2 wordt op %1 plaatsen gebruikt. Doorgaan?";
Blockly.Msg.DELETE_X_BLOCKS = "üóëÔ∏èVerwijder %1 blokken";
Blockly.Msg.DISABLE_BLOCK = "üîíBlok deactiveren";
Blockly.Msg.DUPLICATE_BLOCK = "üìëBlok kopi√´ren";
Blockly.Msg.ENABLE_BLOCK = "üîëBlok activeren";
Blockly.Msg.EXPAND_ALL = "üìñBlokken uitvouwen";
Blockly.Msg.EXPAND_BLOCK = "üìñBlok uitvouwen";
Blockly.Msg.EXTERNAL_INPUTS = "‚ÜòÔ∏èExterne invoer";
Blockly.Msg.HELP = "‚ÑπÔ∏è Help?";
Blockly.Msg.INLINE_INPUTS = "‚û°Ô∏èInline invoer";
Blockly.Msg.LISTS_CREATE1 = "maak een lijst";
Blockly.Msg.LISTS_CREATE2 = "met aantal items";
Blockly.Msg.LISTS_CREATE_TOOLTIP = "Maak een lijst met het gewenste aantal items";
Blockly.Msg.LISTS_append = 'voeg %1 aan het eind van %2';
Blockly.Msg.LISTS_append_TOOLTIP = 'Voeg een item toe aan het einde van een lijst.';
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "lijst";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Toevoegen, verwijderen of sorteren.";
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "maak een lijst met";
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Voeg een item toe.";
//***********************
// TOT HIER NL
//***********************
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "returns an array or list with any number of elements";
Blockly.Msg.LISTS_GET = "the element";
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "# since the end";
Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#"; // untranslated
Blockly.Msg.LISTS_GET_INDEX_GET = "Get";
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "get and delete";
Blockly.Msg.LISTS_GET_INDEX_LAST = "last";
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "random";
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "delete";
Blockly.Msg.LISTS_GET_INDEX_TAIL = ""; // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "returns the first item in a list";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM = "returns the item to the specified position in a list";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "return the last item in a list";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "returns a random item in a list";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Deletes and returns the first item in a list";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM = "Deletes and returns the item at the specified position in a list";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Deletes and returns the last item in a list";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Deletes and returns a random item in a list";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Deletes the first item in a list";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM = "Deletes the item at the specified position in a list";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Deletes the last item in a list";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Deletes a random item from a list";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "until # since the end";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "up to #";
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "until the end";
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "get the sublist from the beginning";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "get the sublist from # since the end";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "get the sublist from #";
Blockly.Msg.LISTS_GET_SUBLIST_TAIL = ""; // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Creates a copy of the specified part of a list";
Blockly.Msg.LISTS_INDEX_FROM_END_TOOLTIP = "%1 is the last element";
Blockly.Msg.LISTS_INDEX_FROM_START_TOOLTIP = "%1 is the first item";
Blockly.Msg.LISTS_INDEX_OF_FIRST = "find the first instance of the item";
Blockly.Msg.LISTS_INDEX_OF_LAST = "find the last instance of the item";
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "returns the index of the first / last occurrence of the item in the list, returns%1 if the item is not found";
Blockly.Msg.LISTS_INLIST = "in the list";
Blockly.Msg.LISTS_ISEMPTY_TITLE = "%1 is empty";
Blockly.Msg.LISTS_ISEMPTY_TOOLTIP = "returns true if the list is empty";
Blockly.Msg.LISTS_LENGTH_TITLE = "length of%1";
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "returns the length of a list";
Blockly.Msg.LISTS_REPEAT_TITLE = "create a list with the item%1 repeated%2 times";
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Create a list consisting of the supplied value repeated the specified number of times";
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "like";
Blockly.Msg.LISTS_of = "of";
Blockly.Msg.LISTS_SET_INDEX_SET = "put the element";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Inserts the item at the beginning of a list";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM = "Inserts the item at the position specified in a list";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Add item at the end of a list";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Inserts the item at random into a list";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Fix the first item in a list";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM = "Update the item to the specified position in a list";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Fix the last item in a list";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Fix a random element in a list";
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "false";
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "returns a 0 or 1 logical state";
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "true";
Blockly.Msg.compare = "returns true if a value is in an interval";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "returns true if both entries are equal";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "returns true if the first entry is greater than the second";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "returns true if the first entry is greater than or equal to the second";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "returns true if the first entry is smaller than the second";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "returns true if the first entry is smaller or equal to the second";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "returns true if the two entries are different";
Blockly.Msg.LOGIC_NEGATE_TITLE = "not %1";
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "returns true if the entry is false, returns false if the entry is true";
Blockly.Msg.LOGIC_NULL = "null";
Blockly.Msg.LOGIC_NULL_TOOLTIP = "returns null";
Blockly.Msg.LOGIC_OPERATOR = [["and", "and"], ["or", "or"], ["or exclusive", "xor"], ["left shift", "shiftL"], ["right shift", "shiftR"]];
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "returns true if both entries are true";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "returns true if at least one of the entries is true";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_xor = "returns true if only one of the entries is true";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_shiftR = "shifts to the right \ n";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_shiftL = "makes a left shift";
Blockly.Msg.LOGIC_TERNARY_CONDITION = "test";
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "if false";
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "if true";
Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "Check the condition in 'test' If it is true, return the value 'if true', else return the value 'if false'";
Blockly.Msg.MATH_ADDITION_SYMBOL = "+"; // untranslated
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "returns the sum of the two numbers";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "returns the quotient of the two numbers";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "returns the difference of the two numbers";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "returns the product of the two numbers";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "returns the first number raised to the power of the second";
Blockly.Msg.MATH_CHANGE_TITLE = "increment variable %1 by %2";
Blockly.Msg.MATH_CHANGE_TOOLTIP = "Add a number to the variable %1";
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "returns one of the current constants: œÄ (3.141 ...), e (2.718 ...), œÜ (1.618 ...), sqrt (2) (1.414 ...), sqrt (¬Ω) (0.707 ...), or ‚àû (infinite) ";
Blockly.Msg.MATH_CONSTRAIN_TITLE = "constrain # %1 between %2 & %3";
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Constrain a number to be between the specified (included) limits";
Blockly.Msg.MATH_DIVISION_SYMBOL = "√∑"; // untranslated
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "is divisible by";
Blockly.Msg.MATH_IS_EVEN = "is even";
Blockly.Msg.MATH_IS_NEGATIVE = "is negative";
Blockly.Msg.MATH_IS_ODD = "is odd";
Blockly.Msg.MATH_IS_POSITIVE = "is positive";
Blockly.Msg.MATH_IS_PRIME = "is prime";
Blockly.Msg.MATH_IS_TOOLTIP = "returns true or false if a number is even, odd, prime, integer, positive, negative, or if it is divisible by a number";
Blockly.Msg.MATH_IS_WHOLE = "is integer";
Blockly.Msg.MATH_MODULO_TITLE = "remainder of %1 √∑%2";
Blockly.Msg.MATH_MODULO_TOOLTIP = "returns the rest of the Euclidean division of the two numbers";
Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "√ó"; // untranslated
Blockly.Msg.MATH_NUMBER_TOOLTIP = "A number";
Blockly.Msg.MATH_ONLIST_HELPURL = ""; // untranslated
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "list average";
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "maximum of the list";
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "median of the list";
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "minimum of the list";
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "majority of the list";
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "random element of the list";
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "standard deviation of the list";
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "sum of the list";
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Returns the average (arithmetic) numeric values ‚Äã‚Äãin the list";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "returns the largest number in the list";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "returns the median number of the list";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "returns the smallest number in the list";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "returns a list of the most common element (s) in the list";
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "returns an item in the random list";
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "returns the standard deviation of the list";
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "returns the sum of all the numbers in the list";
Blockly.Msg.MATH_POWER_SYMBOL = "^"; // untranslated
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "random fraction";
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "returns a random fraction between 0.0 (inclusive) and 1.0 (excluded)";
Blockly.Msg.MATH_RANDOM_INT_TITLE = "random integer%1 & %2";
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "returns a random integer between the two specified, included limits";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "round";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "round down";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "round up";
Blockly.Msg.MATH_ROUND_TOOLTIP = "Round a number above or below";
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "absolute value";
Blockly.Msg.MATH_SINGLE_OP_ROOT = "square root";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "returns the absolute value of a number";
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "returns e to the power of a number";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "returns the natural logarithm of a number";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "returns the base 10 logarithm of a number";
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "returns the opposite of a number";
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "returns 10 to the power of a number";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "returns the square root of a number";
Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-"; // untranslated
Blockly.Msg.MATH_TRIG_ACOS = "acos"; // untranslated
Blockly.Msg.MATH_TRIG_ASIN = "asin"; // untranslated
Blockly.Msg.MATH_TRIG_ATAN = "atan"; // untranslated
Blockly.Msg.MATH_TRIG_COS = "cos"; // untranslated
Blockly.Msg.MATH_TRIG_SIN = "sin"; // untranslated
Blockly.Msg.MATH_TRIG_TAN = "tan"; // untranslated
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "returns the arccosinus of a number";
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "returns the arcsine of a number";
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "returns the arctangent of a number";
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "returns the cosine of an angle in degrees";
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "returns the sine of an angle in degrees";
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "returns the tangent of an angle in degrees";
Blockly.Msg.NEW_VARIABLE = "Create a variable";
Blockly.Msg.NEW_VARIABLE_TITLE = "New name of the variable";
Blockly.Msg.ORDINAL_NUMBER_SUFFIX = ""; // untranslated
Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Execute user-defined%1 function";
Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Execute user-defined function%1 and use its result";
Blockly.Msg.PROCEDURES_CREATE_DO = "Create %1";
Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT = "Describe this function";
Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "do";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "";
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Create a procedure or function without data return";
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "return";
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Create a procedure or function with a data return";
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Warning: This function has duplicate settings";
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Highlight the function definition";
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "returns the specified value";
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Warning: This block must be used in a procedure or function definition";
Blockly.Msg.PROCEDURES_MUTATORARG_TYPE = "of type";
Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "Add an entry to the procedure or function";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "input arguments";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "Add, delete, or rearrange";
Blockly.Msg.REDO = "Redo";
Blockly.Msg.REMOVE_COMMENT = "üóëÔ∏èDelete a comment";
Blockly.Msg.RENAME_VARIABLE = "‚úèÔ∏èRename variable '%1'";
Blockly.Msg.RENAME_VARIABLE_TITLE = "‚úèÔ∏èRename variables '%1'";
//Array
Blockly.Msg.ARRAY_CREATE_EMPTY_TITLE = 'empty!';
Blockly.Msg.tab_create = "Create block 'element of array %1'";
Blockly.Msg.tab_create_fix = "Create Block 'put an element from array %1 to '";
Blockly.Msg.ARRAY_CREATE_WITH = "made up of";
Blockly.Msg.ARRAY_taille = "size";
Blockly.Msg.ARRAY_contenu = "which contains";
Blockly.Msg.ARRAY_CREATE_WITH_CONTAINER_TITLE_ADD = "list or array";
Blockly.Msg.ARRAY_CREATE_WITH_CONTAINER_TOOLTIP = "Add, Delete, or Reorder";
Blockly.Msg.ARRAY_CREATE_WITH_INPUT_WITH = "elements";
Blockly.Msg.ARRAY_CREATE_WITH_ITEM_TITLE = "element";
Blockly.Msg.ARRAY_CREATE_WITH_TOOLTIP = "Returns a list with a number of items";
Blockly.Msg.ARRAY_GETINDEX_ITEM = "the element of the array";
Blockly.Msg.ARRAY_GETINDEX_ITEM2 = "array";
Blockly.Msg.ARRAY_GETINDEX_TOOLTIP1 = "returns the value stored in the list";
Blockly.Msg.ARRAY_GETINDEX_TOOLTIP2 = "created an array of the selected type";
Blockly.Msg.ARRAY_GETINDEX_TOOLTIP3 = "fix an element of the list or array to the indicated value";
Blockly.Msg.ARRAY_create = "set array";
Blockly.Msg.ARRAY_fixe = "put the element of the array";
Blockly.Msg.ARRAY_dim = "size of";
Blockly.Msg.ARRAY_index = "index";
Blockly.Msg.ARRAY_append_tooltip = "add an item at the end of the list or array";
Blockly.Msg.ARRAY_append_url = "";
Blockly.Msg.size = "array size";
Blockly.Msg.size_TOOLTIP = "returns the size of the list or array";
//text
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Add an item";
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "text";
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Add, Delete, or Reorder";
Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 is empty";
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "returns true if the supplied text is empty";
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "text created with";
Blockly.Msg.TEXT_JOIN_TOOLTIP = "returns a text aggregating any number of elements";
Blockly.Msg.TEXT_LENGTH_TITLE = "length of %1";
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "returns the number of letters (including spaces) of the supplied text";
Blockly.Msg.TEXT_PRINT_TITLE = "show %1";
Blockly.Msg.TEXT_PRINT_TOOLTIP = "Show text, number or other specified value";
Blockly.Msg.TEXT_TEXT_TOOLTIP = "A letter, a word or a phrase";
Blockly.Msg.TODAY = "Today";
Blockly.Msg.UNDO = "Cancel";
Blockly.Msg.VARIABLES_AS = "type";
Blockly.Msg.VARIABLES_DEFAULT_NAME = "var";
Blockly.Msg.VARIABLES_GET_CREATE_SET = "Create block 'set variable %1 to '";
Blockly.Msg.VARIABLES_GET_TOOLTIP = "returns the value of this variable";
Blockly.Msg.VARIABLES_SET = "set the variable";
Blockly.Msg.VARIABLES_SET_CREATE_GET = "Create block %1";
Blockly.Msg.VARIABLES_SET_TOOLTIP = "Set the variable to the specified value";
Blockly.Msg.var_set_init = "Declare variable";
Blockly.Msg.var_set_init_tooltip = "Declare and initialize the variable of the specified type and value";
Blockly.Msg.ARDUINO_VAR_CONST = "Declare constant";
Blockly.Msg.ARDUINO_VAR_CONST_tooltip = "Declares a constant of the specified type and value";
Blockly.Msg.VARIABLE_ALREADY_EXISTS = "A variable called %1 already exists";
Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = "";
Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_MSG_THEN = "then";
Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;
Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT = Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT;